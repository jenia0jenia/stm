# Generated by Django 2.1.1 on 2018-09-28 12:37

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import theatre.views
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(max_length=100, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('description', tinymce.models.HTMLField(blank=True, verbose_name='О студийце')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='uploads/artist/')),
                ('year', theatre.utils.IntegerRangeField(blank=True, default=2018, null=True, verbose_name='В студии с года...')),
            ],
            options={
                'verbose_name': 'Студиец',
                'verbose_name_plural': 'Труппа',
                'ordering': ['last_name', 'year'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Жанр')),
                ('description', models.CharField(max_length=400, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='Имя персонажа')),
                ('artists', models.ManyToManyField(blank=True, to='theatre.Artist', verbose_name='Артисты')),
            ],
            options={
                'verbose_name': 'Роль',
                'verbose_name_plural': 'Роли',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Spectacle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название')),
                ('description', tinymce.models.HTMLField(blank=True, verbose_name='Описание')),
                ('rating_yes', models.IntegerField(default=0, verbose_name='Голосов "Понравилось"')),
                ('rating_no', models.IntegerField(default=0, verbose_name='Голосов "Не понравилось"')),
                ('premiere_date', models.DateField(default=django.utils.timezone.now, verbose_name='Дата премьеры')),
                ('close_date', models.DateField(default=datetime.date(1, 1, 1), verbose_name='Дата закрытия спектакля')),
                ('is_premiere', models.BooleanField(default=False, verbose_name='Премьера?')),
                ('genre', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='theatre.Genre', verbose_name='Жанр')),
            ],
            options={
                'verbose_name': 'Спектакль',
                'verbose_name_plural': 'Спектакли',
                'ordering': ['name', 'premiere_date'],
            },
        ),
        migrations.AddField(
            model_name='role',
            name='spectacles',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='theatre.Spectacle'),
        ),
        migrations.AddField(
            model_name='artist',
            name='spectacles',
            field=models.ManyToManyField(blank=True, to='theatre.Spectacle', verbose_name='Артисты'),
        ),
    ]
